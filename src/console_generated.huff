//
// Automatically generated by scripts/build_log_macros.py
//

#include "console_call.huff"

/// Consumes nothing from the stack and logs it to the console
#define macro LOG(memoryOffset) = takes(0) returns(0) {
    0x0 // stack elements
    __FUNC_SIG('log()')
    PREPARE_AND_CALL_CONSOLE(0x4, <memoryOffset>)
}

/// Consumes int256 from the stack and logs it to the console
#define macro LOG_INT256(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(int256)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes uint256 from the stack and logs it to the console
#define macro LOG_UINT256(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(uint256)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bool from the stack and logs it to the console
#define macro LOG_BOOL(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bool)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes address from the stack and logs it to the console
#define macro LOG_ADDRESS(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(address)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes1 from the stack and logs it to the console
#define macro LOG_BYTES1(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes1)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes2 from the stack and logs it to the console
#define macro LOG_BYTES2(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes2)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes3 from the stack and logs it to the console
#define macro LOG_BYTES3(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes3)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes4 from the stack and logs it to the console
#define macro LOG_BYTES4(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes4)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes5 from the stack and logs it to the console
#define macro LOG_BYTES5(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes5)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes6 from the stack and logs it to the console
#define macro LOG_BYTES6(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes6)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes7 from the stack and logs it to the console
#define macro LOG_BYTES7(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes7)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes8 from the stack and logs it to the console
#define macro LOG_BYTES8(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes8)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes9 from the stack and logs it to the console
#define macro LOG_BYTES9(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes9)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes10 from the stack and logs it to the console
#define macro LOG_BYTES10(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes10)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes11 from the stack and logs it to the console
#define macro LOG_BYTES11(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes11)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes12 from the stack and logs it to the console
#define macro LOG_BYTES12(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes12)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes13 from the stack and logs it to the console
#define macro LOG_BYTES13(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes13)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes14 from the stack and logs it to the console
#define macro LOG_BYTES14(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes14)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes15 from the stack and logs it to the console
#define macro LOG_BYTES15(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes15)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes16 from the stack and logs it to the console
#define macro LOG_BYTES16(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes16)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes17 from the stack and logs it to the console
#define macro LOG_BYTES17(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes17)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes18 from the stack and logs it to the console
#define macro LOG_BYTES18(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes18)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes19 from the stack and logs it to the console
#define macro LOG_BYTES19(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes19)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes20 from the stack and logs it to the console
#define macro LOG_BYTES20(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes20)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes21 from the stack and logs it to the console
#define macro LOG_BYTES21(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes21)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes22 from the stack and logs it to the console
#define macro LOG_BYTES22(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes22)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes23 from the stack and logs it to the console
#define macro LOG_BYTES23(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes23)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes24 from the stack and logs it to the console
#define macro LOG_BYTES24(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes24)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes25 from the stack and logs it to the console
#define macro LOG_BYTES25(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes25)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes26 from the stack and logs it to the console
#define macro LOG_BYTES26(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes26)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes27 from the stack and logs it to the console
#define macro LOG_BYTES27(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes27)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes28 from the stack and logs it to the console
#define macro LOG_BYTES28(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes28)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes29 from the stack and logs it to the console
#define macro LOG_BYTES29(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes29)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes30 from the stack and logs it to the console
#define macro LOG_BYTES30(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes30)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes31 from the stack and logs it to the console
#define macro LOG_BYTES31(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes31)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes bytes32 from the stack and logs it to the console
#define macro LOG_BYTES32(memoryOffset) = takes(1) returns(0) {
    0x1 // stack elements
    __FUNC_SIG('log(bytes32)')
    PREPARE_AND_CALL_CONSOLE(0x24, <memoryOffset>)
}

/// Consumes uint256, uint256 from the stack and logs it to the console
#define macro LOG_UINT256_UINT256(memoryOffset) = takes(2) returns(0) {
    0x2 // stack elements
    __FUNC_SIG('log(uint256,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x44, <memoryOffset>)
}

/// Consumes uint256, bool from the stack and logs it to the console
#define macro LOG_UINT256_BOOL(memoryOffset) = takes(2) returns(0) {
    0x2 // stack elements
    __FUNC_SIG('log(uint256,bool)')
    PREPARE_AND_CALL_CONSOLE(0x44, <memoryOffset>)
}

/// Consumes uint256, address from the stack and logs it to the console
#define macro LOG_UINT256_ADDRESS(memoryOffset) = takes(2) returns(0) {
    0x2 // stack elements
    __FUNC_SIG('log(uint256,address)')
    PREPARE_AND_CALL_CONSOLE(0x44, <memoryOffset>)
}

/// Consumes bool, uint256 from the stack and logs it to the console
#define macro LOG_BOOL_UINT256(memoryOffset) = takes(2) returns(0) {
    0x2 // stack elements
    __FUNC_SIG('log(bool,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x44, <memoryOffset>)
}

/// Consumes bool, bool from the stack and logs it to the console
#define macro LOG_BOOL_BOOL(memoryOffset) = takes(2) returns(0) {
    0x2 // stack elements
    __FUNC_SIG('log(bool,bool)')
    PREPARE_AND_CALL_CONSOLE(0x44, <memoryOffset>)
}

/// Consumes bool, address from the stack and logs it to the console
#define macro LOG_BOOL_ADDRESS(memoryOffset) = takes(2) returns(0) {
    0x2 // stack elements
    __FUNC_SIG('log(bool,address)')
    PREPARE_AND_CALL_CONSOLE(0x44, <memoryOffset>)
}

/// Consumes address, uint256 from the stack and logs it to the console
#define macro LOG_ADDRESS_UINT256(memoryOffset) = takes(2) returns(0) {
    0x2 // stack elements
    __FUNC_SIG('log(address,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x44, <memoryOffset>)
}

/// Consumes address, bool from the stack and logs it to the console
#define macro LOG_ADDRESS_BOOL(memoryOffset) = takes(2) returns(0) {
    0x2 // stack elements
    __FUNC_SIG('log(address,bool)')
    PREPARE_AND_CALL_CONSOLE(0x44, <memoryOffset>)
}

/// Consumes address, address from the stack and logs it to the console
#define macro LOG_ADDRESS_ADDRESS(memoryOffset) = takes(2) returns(0) {
    0x2 // stack elements
    __FUNC_SIG('log(address,address)')
    PREPARE_AND_CALL_CONSOLE(0x44, <memoryOffset>)
}

/// Consumes uint256, uint256, uint256 from the stack and logs it to the console
#define macro LOG_UINT256_UINT256_UINT256(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(uint256,uint256,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes uint256, uint256, bool from the stack and logs it to the console
#define macro LOG_UINT256_UINT256_BOOL(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(uint256,uint256,bool)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes uint256, uint256, address from the stack and logs it to the console
#define macro LOG_UINT256_UINT256_ADDRESS(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(uint256,uint256,address)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes uint256, bool, uint256 from the stack and logs it to the console
#define macro LOG_UINT256_BOOL_UINT256(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(uint256,bool,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes uint256, bool, bool from the stack and logs it to the console
#define macro LOG_UINT256_BOOL_BOOL(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(uint256,bool,bool)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes uint256, bool, address from the stack and logs it to the console
#define macro LOG_UINT256_BOOL_ADDRESS(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(uint256,bool,address)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes uint256, address, uint256 from the stack and logs it to the console
#define macro LOG_UINT256_ADDRESS_UINT256(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(uint256,address,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes uint256, address, bool from the stack and logs it to the console
#define macro LOG_UINT256_ADDRESS_BOOL(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(uint256,address,bool)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes uint256, address, address from the stack and logs it to the console
#define macro LOG_UINT256_ADDRESS_ADDRESS(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(uint256,address,address)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes bool, uint256, uint256 from the stack and logs it to the console
#define macro LOG_BOOL_UINT256_UINT256(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(bool,uint256,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes bool, uint256, bool from the stack and logs it to the console
#define macro LOG_BOOL_UINT256_BOOL(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(bool,uint256,bool)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes bool, uint256, address from the stack and logs it to the console
#define macro LOG_BOOL_UINT256_ADDRESS(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(bool,uint256,address)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes bool, bool, uint256 from the stack and logs it to the console
#define macro LOG_BOOL_BOOL_UINT256(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(bool,bool,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes bool, bool, bool from the stack and logs it to the console
#define macro LOG_BOOL_BOOL_BOOL(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(bool,bool,bool)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes bool, bool, address from the stack and logs it to the console
#define macro LOG_BOOL_BOOL_ADDRESS(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(bool,bool,address)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes bool, address, uint256 from the stack and logs it to the console
#define macro LOG_BOOL_ADDRESS_UINT256(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(bool,address,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes bool, address, bool from the stack and logs it to the console
#define macro LOG_BOOL_ADDRESS_BOOL(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(bool,address,bool)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes bool, address, address from the stack and logs it to the console
#define macro LOG_BOOL_ADDRESS_ADDRESS(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(bool,address,address)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes address, uint256, uint256 from the stack and logs it to the console
#define macro LOG_ADDRESS_UINT256_UINT256(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(address,uint256,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes address, uint256, bool from the stack and logs it to the console
#define macro LOG_ADDRESS_UINT256_BOOL(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(address,uint256,bool)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes address, uint256, address from the stack and logs it to the console
#define macro LOG_ADDRESS_UINT256_ADDRESS(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(address,uint256,address)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes address, bool, uint256 from the stack and logs it to the console
#define macro LOG_ADDRESS_BOOL_UINT256(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(address,bool,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes address, bool, bool from the stack and logs it to the console
#define macro LOG_ADDRESS_BOOL_BOOL(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(address,bool,bool)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes address, bool, address from the stack and logs it to the console
#define macro LOG_ADDRESS_BOOL_ADDRESS(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(address,bool,address)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes address, address, uint256 from the stack and logs it to the console
#define macro LOG_ADDRESS_ADDRESS_UINT256(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(address,address,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes address, address, bool from the stack and logs it to the console
#define macro LOG_ADDRESS_ADDRESS_BOOL(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(address,address,bool)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes address, address, address from the stack and logs it to the console
#define macro LOG_ADDRESS_ADDRESS_ADDRESS(memoryOffset) = takes(3) returns(0) {
    0x3 // stack elements
    __FUNC_SIG('log(address,address,address)')
    PREPARE_AND_CALL_CONSOLE(0x64, <memoryOffset>)
}

/// Consumes uint256, uint256, uint256, uint256 from the stack and logs it to the console
#define macro LOG_UINT256_UINT256_UINT256_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,uint256,uint256,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, uint256, uint256, bool from the stack and logs it to the console
#define macro LOG_UINT256_UINT256_UINT256_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,uint256,uint256,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, uint256, uint256, address from the stack and logs it to the console
#define macro LOG_UINT256_UINT256_UINT256_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,uint256,uint256,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, uint256, bool, uint256 from the stack and logs it to the console
#define macro LOG_UINT256_UINT256_BOOL_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,uint256,bool,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, uint256, bool, bool from the stack and logs it to the console
#define macro LOG_UINT256_UINT256_BOOL_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,uint256,bool,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, uint256, bool, address from the stack and logs it to the console
#define macro LOG_UINT256_UINT256_BOOL_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,uint256,bool,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, uint256, address, uint256 from the stack and logs it to the console
#define macro LOG_UINT256_UINT256_ADDRESS_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,uint256,address,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, uint256, address, bool from the stack and logs it to the console
#define macro LOG_UINT256_UINT256_ADDRESS_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,uint256,address,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, uint256, address, address from the stack and logs it to the console
#define macro LOG_UINT256_UINT256_ADDRESS_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,uint256,address,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, bool, uint256, uint256 from the stack and logs it to the console
#define macro LOG_UINT256_BOOL_UINT256_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,bool,uint256,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, bool, uint256, bool from the stack and logs it to the console
#define macro LOG_UINT256_BOOL_UINT256_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,bool,uint256,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, bool, uint256, address from the stack and logs it to the console
#define macro LOG_UINT256_BOOL_UINT256_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,bool,uint256,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, bool, bool, uint256 from the stack and logs it to the console
#define macro LOG_UINT256_BOOL_BOOL_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,bool,bool,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, bool, bool, bool from the stack and logs it to the console
#define macro LOG_UINT256_BOOL_BOOL_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,bool,bool,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, bool, bool, address from the stack and logs it to the console
#define macro LOG_UINT256_BOOL_BOOL_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,bool,bool,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, bool, address, uint256 from the stack and logs it to the console
#define macro LOG_UINT256_BOOL_ADDRESS_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,bool,address,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, bool, address, bool from the stack and logs it to the console
#define macro LOG_UINT256_BOOL_ADDRESS_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,bool,address,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, bool, address, address from the stack and logs it to the console
#define macro LOG_UINT256_BOOL_ADDRESS_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,bool,address,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, address, uint256, uint256 from the stack and logs it to the console
#define macro LOG_UINT256_ADDRESS_UINT256_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,address,uint256,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, address, uint256, bool from the stack and logs it to the console
#define macro LOG_UINT256_ADDRESS_UINT256_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,address,uint256,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, address, uint256, address from the stack and logs it to the console
#define macro LOG_UINT256_ADDRESS_UINT256_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,address,uint256,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, address, bool, uint256 from the stack and logs it to the console
#define macro LOG_UINT256_ADDRESS_BOOL_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,address,bool,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, address, bool, bool from the stack and logs it to the console
#define macro LOG_UINT256_ADDRESS_BOOL_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,address,bool,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, address, bool, address from the stack and logs it to the console
#define macro LOG_UINT256_ADDRESS_BOOL_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,address,bool,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, address, address, uint256 from the stack and logs it to the console
#define macro LOG_UINT256_ADDRESS_ADDRESS_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,address,address,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, address, address, bool from the stack and logs it to the console
#define macro LOG_UINT256_ADDRESS_ADDRESS_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,address,address,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes uint256, address, address, address from the stack and logs it to the console
#define macro LOG_UINT256_ADDRESS_ADDRESS_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(uint256,address,address,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, uint256, uint256, uint256 from the stack and logs it to the console
#define macro LOG_BOOL_UINT256_UINT256_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,uint256,uint256,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, uint256, uint256, bool from the stack and logs it to the console
#define macro LOG_BOOL_UINT256_UINT256_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,uint256,uint256,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, uint256, uint256, address from the stack and logs it to the console
#define macro LOG_BOOL_UINT256_UINT256_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,uint256,uint256,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, uint256, bool, uint256 from the stack and logs it to the console
#define macro LOG_BOOL_UINT256_BOOL_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,uint256,bool,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, uint256, bool, bool from the stack and logs it to the console
#define macro LOG_BOOL_UINT256_BOOL_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,uint256,bool,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, uint256, bool, address from the stack and logs it to the console
#define macro LOG_BOOL_UINT256_BOOL_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,uint256,bool,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, uint256, address, uint256 from the stack and logs it to the console
#define macro LOG_BOOL_UINT256_ADDRESS_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,uint256,address,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, uint256, address, bool from the stack and logs it to the console
#define macro LOG_BOOL_UINT256_ADDRESS_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,uint256,address,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, uint256, address, address from the stack and logs it to the console
#define macro LOG_BOOL_UINT256_ADDRESS_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,uint256,address,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, bool, uint256, uint256 from the stack and logs it to the console
#define macro LOG_BOOL_BOOL_UINT256_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,bool,uint256,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, bool, uint256, bool from the stack and logs it to the console
#define macro LOG_BOOL_BOOL_UINT256_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,bool,uint256,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, bool, uint256, address from the stack and logs it to the console
#define macro LOG_BOOL_BOOL_UINT256_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,bool,uint256,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, bool, bool, uint256 from the stack and logs it to the console
#define macro LOG_BOOL_BOOL_BOOL_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,bool,bool,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, bool, bool, bool from the stack and logs it to the console
#define macro LOG_BOOL_BOOL_BOOL_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,bool,bool,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, bool, bool, address from the stack and logs it to the console
#define macro LOG_BOOL_BOOL_BOOL_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,bool,bool,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, bool, address, uint256 from the stack and logs it to the console
#define macro LOG_BOOL_BOOL_ADDRESS_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,bool,address,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, bool, address, bool from the stack and logs it to the console
#define macro LOG_BOOL_BOOL_ADDRESS_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,bool,address,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, bool, address, address from the stack and logs it to the console
#define macro LOG_BOOL_BOOL_ADDRESS_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,bool,address,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, address, uint256, uint256 from the stack and logs it to the console
#define macro LOG_BOOL_ADDRESS_UINT256_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,address,uint256,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, address, uint256, bool from the stack and logs it to the console
#define macro LOG_BOOL_ADDRESS_UINT256_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,address,uint256,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, address, uint256, address from the stack and logs it to the console
#define macro LOG_BOOL_ADDRESS_UINT256_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,address,uint256,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, address, bool, uint256 from the stack and logs it to the console
#define macro LOG_BOOL_ADDRESS_BOOL_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,address,bool,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, address, bool, bool from the stack and logs it to the console
#define macro LOG_BOOL_ADDRESS_BOOL_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,address,bool,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, address, bool, address from the stack and logs it to the console
#define macro LOG_BOOL_ADDRESS_BOOL_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,address,bool,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, address, address, uint256 from the stack and logs it to the console
#define macro LOG_BOOL_ADDRESS_ADDRESS_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,address,address,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, address, address, bool from the stack and logs it to the console
#define macro LOG_BOOL_ADDRESS_ADDRESS_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,address,address,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes bool, address, address, address from the stack and logs it to the console
#define macro LOG_BOOL_ADDRESS_ADDRESS_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(bool,address,address,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, uint256, uint256, uint256 from the stack and logs it to the console
#define macro LOG_ADDRESS_UINT256_UINT256_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,uint256,uint256,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, uint256, uint256, bool from the stack and logs it to the console
#define macro LOG_ADDRESS_UINT256_UINT256_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,uint256,uint256,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, uint256, uint256, address from the stack and logs it to the console
#define macro LOG_ADDRESS_UINT256_UINT256_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,uint256,uint256,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, uint256, bool, uint256 from the stack and logs it to the console
#define macro LOG_ADDRESS_UINT256_BOOL_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,uint256,bool,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, uint256, bool, bool from the stack and logs it to the console
#define macro LOG_ADDRESS_UINT256_BOOL_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,uint256,bool,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, uint256, bool, address from the stack and logs it to the console
#define macro LOG_ADDRESS_UINT256_BOOL_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,uint256,bool,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, uint256, address, uint256 from the stack and logs it to the console
#define macro LOG_ADDRESS_UINT256_ADDRESS_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,uint256,address,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, uint256, address, bool from the stack and logs it to the console
#define macro LOG_ADDRESS_UINT256_ADDRESS_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,uint256,address,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, uint256, address, address from the stack and logs it to the console
#define macro LOG_ADDRESS_UINT256_ADDRESS_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,uint256,address,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, bool, uint256, uint256 from the stack and logs it to the console
#define macro LOG_ADDRESS_BOOL_UINT256_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,bool,uint256,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, bool, uint256, bool from the stack and logs it to the console
#define macro LOG_ADDRESS_BOOL_UINT256_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,bool,uint256,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, bool, uint256, address from the stack and logs it to the console
#define macro LOG_ADDRESS_BOOL_UINT256_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,bool,uint256,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, bool, bool, uint256 from the stack and logs it to the console
#define macro LOG_ADDRESS_BOOL_BOOL_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,bool,bool,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, bool, bool, bool from the stack and logs it to the console
#define macro LOG_ADDRESS_BOOL_BOOL_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,bool,bool,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, bool, bool, address from the stack and logs it to the console
#define macro LOG_ADDRESS_BOOL_BOOL_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,bool,bool,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, bool, address, uint256 from the stack and logs it to the console
#define macro LOG_ADDRESS_BOOL_ADDRESS_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,bool,address,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, bool, address, bool from the stack and logs it to the console
#define macro LOG_ADDRESS_BOOL_ADDRESS_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,bool,address,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, bool, address, address from the stack and logs it to the console
#define macro LOG_ADDRESS_BOOL_ADDRESS_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,bool,address,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, address, uint256, uint256 from the stack and logs it to the console
#define macro LOG_ADDRESS_ADDRESS_UINT256_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,address,uint256,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, address, uint256, bool from the stack and logs it to the console
#define macro LOG_ADDRESS_ADDRESS_UINT256_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,address,uint256,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, address, uint256, address from the stack and logs it to the console
#define macro LOG_ADDRESS_ADDRESS_UINT256_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,address,uint256,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, address, bool, uint256 from the stack and logs it to the console
#define macro LOG_ADDRESS_ADDRESS_BOOL_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,address,bool,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, address, bool, bool from the stack and logs it to the console
#define macro LOG_ADDRESS_ADDRESS_BOOL_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,address,bool,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, address, bool, address from the stack and logs it to the console
#define macro LOG_ADDRESS_ADDRESS_BOOL_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,address,bool,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, address, address, uint256 from the stack and logs it to the console
#define macro LOG_ADDRESS_ADDRESS_ADDRESS_UINT256(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,address,address,uint256)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, address, address, bool from the stack and logs it to the console
#define macro LOG_ADDRESS_ADDRESS_ADDRESS_BOOL(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,address,address,bool)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

/// Consumes address, address, address, address from the stack and logs it to the console
#define macro LOG_ADDRESS_ADDRESS_ADDRESS_ADDRESS(memoryOffset) = takes(4) returns(0) {
    0x4 // stack elements
    __FUNC_SIG('log(address,address,address,address)')
    PREPARE_AND_CALL_CONSOLE(0x84, <memoryOffset>)
}

